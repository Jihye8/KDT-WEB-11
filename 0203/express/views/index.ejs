<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>파일 전송</title>
        <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    </head>
    <body>
        <!-- 정적파일 
        <h1>FORM 싱글 연습</h1>
        파일업로드는 post 방식 
        <form action="/uploads" method="post" enctype="multipart/form-data">
            <input type="file" name="userfile" /><br />
            <input type="text" name="title " /><br />
            <button type="submit">업로드</button>
        </form>
        <h1>FORM 멀티 연습(ver1.)</h1>
         파일업로드는 post 방식 
        <form
            action="/uploads/array"
            method="post"
            enctype="multipart/form-data"
        >
            <input type="file" name="userfiles" multiple /><br />
            <input type="text" name="title " /><br />
            <button type="submit">업로드</button>
        </form>
        <h1>FORM 멀티 연습(ver2.)</h1>
        파일업로드는 post 방식 
        <form
            action="/uploads/fields"
            method="post"
            enctype="multipart/form-data"
        >
            <input type="file" name="userfile1" /><br />
            <input type="text" name="title1" /><br />
            <input type="file" name="userfile2" /><br />
            <input type="text" name="title2" /><br />
            <button type="submit">업로드</button> 
        </form> -->

        <h1>동적 파일 업로드</h1>
        <form>
            <input type="file" id="userfile" /><br />
            <input type="text" id="title" /><br />
            <button type="button" onclick="fileUpload()">업로드</button>
        </form>
        <br />
        <br />
        <div class="resultBox"></div>
        <script>
            const resultBox = document.querySelector('.resultBox');

            function fileUpload() {
                const file = document.querySelector('#userfile');
                console.log(file);
                //파일에 접근하기 위해서 file.files를 사용하고
                // file.files는 배열을 반환하며 우리가 원하는 것은 첫번째 요소이기 때문에
                // file.files[0]를 사용합니다.
                console.log(file.files); //배열형태
                console.log(file.files[0]);

                //formData : JS 내장 객체, 폼데이터 생성
                const formData = new FormData();
                //append(key, value)
                formData.append(
                    'title',
                    document.querySelector('#title').value
                );
                //항상 file는 맨마지막에 formData 상에 작성되야 한다. (순서중요)
                formData.append('file', file.files[0]);

                axios({
                    method: 'POST',
                    url: '/uploads/axios',
                    data: formData,
                    // 필수로 content-type넣어주어야 전송된다.
                    headers: {
                        'Content-Type': 'multipart/form-data',
                    },
                }).then((res) => {
                    console.log('res', res);
                    resultBox.innerHTML = `<p>이름은${res.data.title.title}</p><img src=${res.data.file.path}>`;
                });
            }
        </script>
    </body>
</html>
